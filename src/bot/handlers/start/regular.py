import logging

from aiogram import Router
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram.filters import CommandStart
from dependency_injector.wiring import inject, Provide

from bot.container import Container
from bot.interfaces.services.user import AbcUserService
from bot.keyboards.start import start_keyboard

logger = logging.getLogger(__name__)

router = Router()

@router.message(CommandStart())
@inject
async def start_handler(
    message: Message,
    state: FSMContext,
    service: AbcUserService = Provide[Container.user_service],
):
    await state.update_data(history=[])
    is_new = await service.is_user_new(message.from_user)
    if is_new:
        pass
    await message.answer(
        text=f"üëã –ü—Ä–∏–≤–µ—Ç, *{message.from_user.first_name}*!\n\n"
             f"ü™ô –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: *200 —Ç–æ–∫–µ–Ω–æ–≤*\n\n"
             f"ü§ñ –¢–µ–∫—É—â–∏–π –ò–ò: *GPT-4.5*\n"
             f"üí∏ –¶–µ–Ω–∞ –∑–∞ –∑–∞–ø—Ä–æ—Å: *5 —Ç–æ–∫–µ–Ω–æ–≤*\n\n"
             f"üëá –ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?",
        reply_markup=start_keyboard,
        parse_mode=ParseMode.MARKDOWN,
    )
