version: "3.9"

services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - vento_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 12
    restart: unless-stopped
    networks: [internal]
    ports:
      - "127.0.0.1:5432:5432"

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    # Передаём Alembic синхронный URL через переменную среды
    command: sh -c "DATABASE_URL=${POSTGRES__SYNC_URI} alembic upgrade head && python cli.py start"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    expose:
      - "8080"   # только во внутренней сети
    networks: [internal]

  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks: [internal]

volumes:
  vento_db:
  caddy_data:
  caddy_config:

networks:
  internal:
    driver: bridge
